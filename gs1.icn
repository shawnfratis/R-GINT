#Made in Unicon, with Unicon IDE

link wopen
link xcompat
link color
link graphics
link numbers
link options
link button
link dsetup
link evmux
link ivalue 
link usage
link strings

#Notes for future stuff:
#file names in output
#print and view code in window
#BETTER CHECK FOR Q23
#Q23 OMIT AT CERTAIN PLACES?
#switch between codes within prog
#ui IVIB
#x y scan sim

procedure main(args)

   in1 := open(args[1]) | stop("*** cannot open file 1")

xxx := args[2]
yyy := args[3]

#####################################

    count := 0
    count1 := 0

       every !in1  ?  {
      write(find(xxx))
      count +:= 1

      write(find(yyy))
     } do
      count1 +:= 1

   write(count)
   write(count1)

######################################

   in2 := open(args[4]) | stop("*** cannot open file 2")

xxx1 := args[5]
yyy1 := args[6]

    countx := 0
    countx1 := 0

       every !in2  ?  {
      write(find(xxx1))
      countx +:= 1

      write(find(yyy1))
     } do
      countx1 +:= 1

   write(countx)
   write(countx1)

#######################################

   in3 := open(args[7]) | stop("*** cannot open file 3")

xxx2 := args[8]
yyy2 := args[9]

    countxx := 0
    count11 := 0

       every !in3  ?  {
      write(find(xxx2))
      countxx +:= 1

      write(find(yyy2))
     } do
      count11 +:= 1

   write(countxx)
   write(count11)

######################################

   in4 := open(args[10]) | stop("*** cannot open file 4")

xxx3 := args[11]
yyy3 := args[12]

    countxxx := 0
    countx111 := 0

       every !in4  ?  {
      write(find(xxx3))
      countxxx +:= 1

      write(find(yyy3))
     } do
      countx111 +:= 1

   write(countxxx)
   write(countx111)

window(count,count1,yyy, countx, countx1,yyy1,countxx,count11,yyy2,countxxx,countx111,yyy3)

end

#####################################################################################

procedure window(c,d,e,f,g,h,i,j,k,l,m,n)

WOpen("label=Gscan01", "size=800,980","bg=black","linewidth=1","fg=orange")

        WAttrib("dx=1", "dy=1")

cube07(c,d)
cube08(f,g)
cube09(i,j)
cube10(l,m)

Fg("orange")

WWrite("Total Entry 1")
WWrite(c)
WWrite(e)
WWrite(d)

Fg("red")
if d <:= 1 then WWrite("WARNING: entry 1")

Fg("orange")

WWrite("Total Entry 2")
WWrite(f)
WWrite(h)
WWrite(g)

Fg("red")
if g <:= 1 then WWrite("WARNING: entry 2")

Fg("orange")

WWrite("Total Entry 3")
WWrite(i)
WWrite(k)
WWrite(j)

Fg("red")
if j <:= 1 then WWrite("WARNING: entry 3")

Fg("orange")

WWrite("Total Entry 4")
WWrite(l)
WWrite(n)
WWrite(m)

Fg("red")
if m <:= 1 then WWrite("WARNING: entry 4")

       repeat {

w := Active() | stop("Active fails")

################################
#not presently used - can be modified to re-introduce mouse events.
   
       case e := Event(w) of {

&lpress | &mpress | &rpress: {
	      x1 := &x
	      y1 := &y
	      x2 := y2 := &null
	  }

################################
#begin basic keyboard commands.

#this path is currently set for Windows.
#You will have to modify it for other platforms. 

"\z": {
	 
        WriteImage("C:/Users/sfratis/Desktop/gs01.png")

}

################################


"\]": {       
              EraseArea()
              }
"\-": {  
              clock()
              }
"\@": {
              exit()
              }
"\?": { 
              Notice("\] = Erase area, - = Timestamp, Z = Save Image, , = Open Image, ; = Annotation, @ = Exit")
              }
"\,": { 
              openImage()
  }
"\\": {      
              inputprompt()
   }
"\;": {
              textin01()
                      
	}
     }
  }

WDone()

end

procedure cube07(c,d)

eax := 125
eay := 10

dax := 175
day := 10

(ebx := 165,eby := 10 ,ecx := 165,ecy := 15 + c,edx :=125,edy := 15 + c)

(dbx := 235,dby := 10,dcx := 235,dcy := 15 + d,ddx := 175,ddy := 15 + d)


#######################################

Fg("dark blue")
 FillPolygon(eax,eay,ebx,eby,ecx,ecy,edx,edy)

Fg("yellow")
 FillPolygon(dax,day,dbx,dby,dcx,dcy,ddx,ddy)

end

##############################################################################################

procedure cube08(c,d)

eax := 255
eay := 10

dax := 300
day := 10

(ebx := 295,eby := 10 ,ecx := 295,ecy := 15 + c,edx :=255,edy := 15 + c)

(dbx := 365,dby := 10,dcx := 365,dcy := 15 + d,ddx := 300,ddy := 15 + d)


#######################################

Fg("blue")
 FillPolygon(eax,eay,ebx,eby,ecx,ecy,edx,edy)

Fg("purple-magenta")
 FillPolygon(dax,day,dbx,dby,dcx,dcy,ddx,ddy)

end

#####################################################################

procedure cube09(c,d)

eax := 375
eay := 10

dax := 410
day := 10

(ebx :=400 ,eby := 10 ,ecx := 400,ecy := 15 + c,edx :=375,edy := 15 + c)

(dbx :=455,dby := 10,dcx := 455,dcy := 15 + d,ddx := 410,ddy := 15 + d)


#######################################

Fg("blue")
 FillPolygon(eax,eay,ebx,eby,ecx,ecy,edx,edy)

Fg("dark brown")
 FillPolygon(dax,day,dbx,dby,dcx,dcy,ddx,ddy)

end

##############################################################################################

procedure cube10(c,d)

eax := 475
eay := 10

dax := 510
day := 10

(ebx := 500,eby := 10 ,ecx := 500,ecy := 15 + c,edx :=475,edy := 15 + c)

(dbx := 565,dby := 10,dcx := 565,dcy := 15 + d,ddx := 510,ddy := 15 + d)


#######################################

Fg("dark blue")
 FillPolygon(eax,eay,ebx,eby,ecx,ecy,edx,edy)

Fg("reddish-yellow")
 FillPolygon(dax,day,dbx,dby,dcx,dcy,ddx,ddy)

end

#####################################################################

procedure clock()

WAttrib("dx=1", "dy=700")

        Fg("green")
 
        WWrite("milliseconds of CPU time = ",&time)
        WWrite("Time of day as hh:mm:ss (24-hour format) = ",&clock)
        WWrite("current date in yyyy/mm/dd format = ",&date)
        WWrite("timestamp with day of the week, date, and current time to the minute = ",&dateline)
  
end

#######################################################################

#open image

procedure openImage()

WOpen("label=Gscan01", "size=50,50","bg=black","linewidth=1","fg=orange")

         WAttrib("dx=1", "dy=1")

        ReadImage("C:/Users/sfratis/Desktop/gs01.png",1,1)

end

########################################################


procedure textin01()

        WAttrib("dx=1", "dy=1")

        Fg("green")

        WAttrib("dx=1", "dy=1")
        WWrite("annotation:")
        s := WRead()
        WWrite("note:",image(s))
#WDone()

end

#END OF PROGRAM####################

#########################################################
