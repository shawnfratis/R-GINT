#r-gint 2018 FratisGraphics

#G-code generator/converter/interpreter/visualizer.

#Some of this code is from the University of Arizona and Rosetta Code. Please contact me if you would like specifics of this.
#shawnfratis@gmail.com

#Integrated with Jafar Al-Gharaibeh's Unicon 3D viewer.

#Made in Unicon, with Unicon IDE
#unicon.sourceforge.net

#DXF to 3d translator

#################################################

link lists
link printf

procedure main84x(aa)

out := open("input.txt","w")
	every l := !aa do {
		write(out,l)
}
return()
end

#############################################

procedure main8888()
removelines8888("input.txt")
end
 
procedure removelines8888(fn)

   f := open(fn,"r") | read(f)                  
   every put(F := [],|read(f))

hstck := F

every ndle := !["ENTITIES"] do {                                         
 
   if i := lindex(hstck,ndle) then {                                           
      write("item =",ndle, " is at position ",i," in list.")                
           }
         }
    main2q8888(i)
   end

#########################################################

procedure main2q8888(i) 
   removelines28888("input.txt",1,i) | stop("Failed to remove lines.")
   main38888()
end
 
procedure removelines28888(fn,start,skip)
 
   f := open(fn,"r") | fail                  
   out := open("output.txt","w") | stop("Unable to open ",out)

   every put(F := [],|read(f))               
   close(f)
 
   if *F < start-1+skip then fail
   every F[start - 1 + (1 to skip)] := &null 
 
   f := open(fn,"rw") | fail                  
   every write(\!F)
   every write(out,\!F)             
   close(out)
   return 
  end

#########################################################

  procedure main38888() 
   removelines38888("output.txt",0,0) | stop("Failed to remove lines.")
   return
end
 
procedure removelines38888(fn,start,skip)
 
   f := open(fn,"r") | fail                  
   every put(F := [],|read(f))               
   
   if *F < start-1+skip then fail
   every F[start - 1 + (1 to skip)] := &null 
    
   ff := open(fn,"w") | fail                  
   every write(\!F) 

###########################################################

  xxx := 8
  yyy := 10
  zzz := 12

#repeat {

qq001 := F[xxx+xx]
qq002 := F[yyy+yy]
qq003 := F[zzz+zz] 
                     
   xx := 0
   yy := 0
   zz := 0

until xxx := 0 do {
     xx := xx + 12
until yyy := 0 do {
     yy := yy + 12
until zzz := 0 do {
     zz := zz + 12

if xxx := 0  then break
}
}
} 
#break
#if xxx := 8 then break
#if zz := 0 then break

 # } 
                     
qs1 := 1
qc1 := ("green")
inpglcube01(qq001,qq002,qq002,qs1,qc1)

########################################
      
   #qq004 := F[20]|0
   #qq005 := F[22]|0
   #qq006 := F[24]|0
     
##########################################################
    
return

end







    