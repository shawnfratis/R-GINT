 #procedure main()
#write(main2("input.txt","rw")|"failed")
#end    



#procedure main2(s)

   # s ? {                               # Establish string #scanning environment
      #while not pos(0) do  {          # Test for end of string
         # tab(many(' '))              # Skip past any blanks
          #word := tab(upto(' ') | 0)  # the next word is up to #the next blank -or- the end of the line
          #write(word)                 # write the word
      #}
 # }

#end

#######################################################

#procedure main()
#write(readline("input.txt",q)|"failed")
#end
 
#procedure readline(f,n)
#n := ["SECTION","HEADER"]
                         # return n'th line of file f
#f := open(\f,"r") | fail                        # open file
#every  i := n[1] & line := |read(f) \ n do i -:= 1  #  <== here
#close(f)
#if i = 0 then return line
#end
#######################################################

procedure main() # remove lines
   removelines("input.txt",3,2) | stop("Failed to remove lines.")
end
 
procedure removelines(fn,start,skip)
 
   f := open(fn,"r") | fail                  # open to read
   every put(F := [],|read(f))               # file to list

   qq := F[5]
   write(qq)

   close(f)
 
   if *F < start-1+skip then fail
   every F[start - 1 + (1 to skip)] := &null # mark delete
 
   #f := open(fn,"w") | fail                  # open to rewrite
   every write(\!F)
   
   #close(f)
   return  

                                  # done
end
    