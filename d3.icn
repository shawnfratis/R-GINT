#r-gint 2018 FratisGraphics

#G-code generator/converter/interpreter/visualizer.

#Some of this code is from the University of Arizona and Rosetta Code. Please contact me if you would like specifics of this.
#shawnfratis@gmail.com

#Integrated with Jafar Al-Gharaibeh's Unicon 3D viewer.

#Made in Unicon, with Unicon IDE
#unicon.sourceforge.net

#DXF to 3d translator
#SKIN

#################################################

link lists
link printf

procedure main86x(aa)

out := open("input.txt","w")
	every l := !aa do {
		write(out,l)
}
return()
end

#############################################

procedure main8810()
removelines8810("input.txt")
end
 
procedure removelines8888(fn)

   f := open(fn,"r") | read(f)                  
   every put(F := [],|read(f))

hstck := F

every ndle := !["SKIN"] do {                                         
 
   if i := lindex(hstck,ndle) then {                                           
      write("item =",ndle, " is at position ",i," in list.")                
           }
         }
    main2q8810(i)
   end

#########################################################

procedure main2q8810(i) 
   removelines28810("input.txt",1,i) | stop("Failed to remove lines.")
   main38810()
end
 
procedure removelines28810(fn,start,skip)
 
   f := open(fn,"r") | fail                  
   out := open("output.txt","w") | stop("Unable to open ",out)

   every put(F := [],|read(f))               
   close(f)
 
   if *F < start-1+skip then fail
   every F[start - 1 + (1 to skip)] := &null 
 
   f := open(fn,"rw") | fail                  
   every write(\!F)
   every write(out,\!F)             
   close(out)
   return 
  end

#########################################################

  procedure main38810() 
   removelines38810("output.txt",0,0) | stop("Failed to remove lines.")
   return
end
 
procedure removelines38889(fn,start,skip)
 
   f := open(fn,"r") | fail                  
   every put(F := [],|read(f))               
   
   if *F < start-1+skip then fail
   every F[start - 1 + (1 to skip)] := &null 
    
   ff := open(fn,"w") | fail                  
   every write(\!F)

out1 := open("output.txt","w")

###########################################################

#SET 3D ANGLE BETTER-do in dassault
#SET AT 0,0,0 OR .5

qs1 := .5
qc1 := ("green")

inpglcube01(F[8|0],F[10|0],F[12|0],qs1,qc1)
inpglcube01(F[20|0],F[22|0],F[24|0],qs1,qc1)
inpglcube01(F[32|0],F[34|0],F[36|0],qs1,qc1)
inpglcube01(F[44|0],F[46|0],F[48|0],qs1,qc1)
inpglcube01(F[56|0],F[58|0],F[60|0],qs1,qc1)
inpglcube01(F[68|0],F[70|0],F[72|0],qs1,qc1)
inpglcube01(F[80|0],F[82|0],F[84|0],qs1,qc1)
inpglcube01(F[92|0],F[94|0],F[96|0],qs1,qc1)
inpglcube01(F[104|0],F[106|0],F[108|0],qs1,qc1)
inpglcube01(F[116|0],F[118|0],F[120|0],qs1,qc1)
inpglcube01(F[128|0],F[130|0],F[132|0],qs1,qc1)
inpglcube01(F[140|0],F[142|0],F[144|0],qs1,qc1)

inpglcube01(F[152|0],F[154|0],F[156|0],qs1,qc1)
inpglcube01(F[164|0],F[166|0],F[168|0],qs1,qc1)
inpglcube01(F[176|0],F[178|0],F[180|0],qs1,qc1)
inpglcube01(F[188|0],F[190|0],F[192|0],qs1,qc1)
inpglcube01(F[200|0],F[202|0],F[204|0],qs1,qc1)
inpglcube01(F[212|0],F[214|0],F[216|0],qs1,qc1)
inpglcube01(F[224|0],F[226|0],F[228|0],qs1,qc1)
inpglcube01(F[236|0],F[238|0],F[240|0],qs1,qc1)
inpglcube01(F[248|0],F[250|0],F[252|0],qs1,qc1)
inpglcube01(F[260|0],F[262|0],F[264|0],qs1,qc1)
inpglcube01(F[272|0],F[274|0],F[276|0],qs1,qc1)
inpglcube01(F[284|0],F[286|0],F[288|0],qs1,qc1)
inpglcube01(F[296|0],F[298|0],F[300|0],qs1,qc1)

inpglline01(F[308|0],F[310|0],F[312|0],F[320|0],F[322|0],F[324|0],qc1)
inpglline01(F[332|0],F[334|0],F[336|0],F[344|0],F[346|0],F[348|0],qc1)
inpglline01(F[356|0],F[358|0],F[360|0],F[368|0],F[370|0],F[372|0],qc1)
inpglline01(F[380|0],F[382|0],F[384|0],F[392|0],F[394|0],F[396|0],qc1)
inpglline01(F[404|0],F[406|0],F[408|0],F[416|0],F[418|0],F[420|0],qc1)
inpglline01(F[428|0],F[430|0],F[432|0],F[440|0],F[442|0],F[444|0],qc1)


##########################################################

write(out1,"N1091Q28")
write(out1,"N1092G00X",F[4|0],"Y",F[6|0])
write(out1,"N1093 G801[2122011]")
write(out1,"N1094 Q24")
write(out1,"N1095G01Y1.488")
write(out1,"N1096G801[2122000]")
write(out1,"N1097X1.488")
write(out1,"N1098Y20.205")
write(out1,"N1099X20.205")
write(out1,"N10100Y1.488")
write(out1,"N10101X10.87")
write(out1,"N10102Q28")
write(out1,"N10103G00X.496Y.45")
write(out1,"N10104 G801[2122011]")
write(out1,"N10105 Q24")
write(out1,"N10106G01Y.5")
write(out1,"N10107G801[2122000]")
write(out1,"N10108Y21.193")
write(out1,"N10109G02X.5Y21.197I.004J0")
write(out1,"N10110G01X21.193")
write(out1,"N10111G02X21.197Y21.193I0J-.004")
write(out1,"N10112G01Y.5")
write(out1,"N10113G02X21.193Y.496I-.004J0")
write(out1,"N10114G01X10.822")
write(out1,"N10115X.5")
write(out1,"N10116G02X.496Y.5I0J.004")
write(out1,"N10117G01X.446")
write(out1,"N10118Q28")
write(out1,"/N10119Q26")
write(out1,"/N10120G00X0")
write(out1,"N10121M30")
write(out1,"%")

#####################################################
    
return

end







    